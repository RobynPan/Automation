###setuplxcvm



#####start finish.ldif file

echo "dn: olcDatabase={1}mdb,cn=config" > finish.ldif
echo "changetype: modify" >> finish.ldif
echo "add: olcLimits" >> finish.ldif
echo "olcLimits: dn.exact=\"cn=admin,dc=conesphere,dc=com\" time.soft=unlimited " >> finish.ldif
echo "  time.hard=unlimited size.soft=unlimited size.hard=unlimited" >> finish.ldif
echo "-" >> finish.ldif
echo "add: olcSyncRepl" >> finish.ldif
##########



echo "first part of finish.ldif done"
echo "entering i loop..."



##########start VMs

for (( i=1; i<=$2; i++))
do
	##### create the lxc container and install basic software: ####

	vmname=$1"LDAP"$i
	lxc-create -t download -n $vmname -- -d debian -r stretch -a amd64
	lxc-start -n $vmname 
	lxc-attach -n $vmname -- passwd 
	lxc-attach -n $vmname -- apt-get update 
	lxc-attach -n $vmname -- PATH=$PATH:/sbin/:/usr/sbin:/usr/local/sbin
	lxc-attach -n $vmname -- apt-get install -y vim sudo python openssh-server sed slapd ldap-utils ldapscripts
	lxc-attach -n $vmname -- sed -i.bak 's/^.*PermitRootLogin prohibit-password/PermitRootLogin yes/g' /etc/ssh/sshd_config 
	lxc-attach -n $vmname -- service sshd restart 
	lxc-attach -n $vmname -- dpkg-reconfigure -plow slapd

		
		

	##### make ldap setup directory####

	echo "finished creating: "$vmname
	lxc-attach -n $1LDAP$i -- mkdir /root/ldapsetup/

	##### send changeServerID to VM and change the ID to reflect the VM###
	cat 3changeServerID.ldif | lxc-attach -n $1LDAP$i -- /bin/sh -c "/bin/cat > /root/ldapsetup/3changeServerID.ldif"
	lxc-attach -n $vmname -- sed -i 's/olcServerID: X/olcServerID: $i/g' /root/ldapsetup/3changeServerID.ldif
	echo "successfully added initial serverID"

	

	###### add this VM to the finish.ldif file which mirrors the Data databank ###
	echo "olcSyncRepl: rid="$((50+$i))" provider=ldap://"$vmname"/ binddn=\"cn=admin,dc=conesphere,dc=com\"" >> finish.ldif
	echo "   bindmethod=simple credentials=test searchbase=\"dc=conesphere,dc=com\"" >> finish.ldif
	echo "   type=refreshOnly interval=00:00:00:10 retry=\"5 5 300 5\" timeout=1" >> finish.ldif

#	echo "added vm to finish.ldif"
done



##### finish hosts file



############this part is still very much a mess:####





#lxc-ls --fancy | grep "RUNNING" | grep "LDAP" sed 's/       RUNNING 0         -//' | sed 's/-//' | sed 's/^\([^ ]*\) \([^:]*\)/\2 \1/' | sed 's/^ *//' | sed 's/ .*/&.conesphere.com &/' > vmvariables

####################Set slapdservices




##########













###############create updateIDs file

updateIDmodpart=$(lxc-ls --fancy | grep "RUNNING" | grep $1LDAP | sed 's/    RUNNING 0         -      / ldap:\/\//' | sed 's/ -//' | sed 's/.*LDAP/olcServerID: /' | sed 's/ *$/\//') && echo "dn: cn=config" > 6updateIDs.ldif && echo "replace: olcServerID" >> 6updateIDs.ldif && echo $updateIDmodpart >> 6updateIDs.ldif && echo "updateIDs.ldif generated"
##############

################create 8finalize file#####

finalizemodpart=$( lxc-ls --fancy | grep "RUNNING" | grep $1LDAP |sed 's/\([a-zA-Z]*\)\([1-9]\)/newlineXXmarker olcSyncRepl: rid=00\2 provider=ldap:\/\/\1\2\/ binddn="cn=config/;s/config.*/config" newlineXXmarker bindmethod=simple credentials=test newlineXXmarker searchbase=\"cn=config\" type=refreshAndPersist newlineXXmarker retry=\"5 5 300 5\" timeout=1 newlineXXmarker/')

echo "dn: olcDatabase={0}config,cn=config" > 8finalize.ldif
echo "changetype: modify" >> 8finalize.ldif
echo "add: olcSyncRepl"  >> 8finalize.ldif
echo $finalizemodpart | sed 's/newlineXXmarker/\'$'\n/g' >> 8finalize.ldif
echo "-" >> 8finalize.ldif
echo "add: olcMirrorMode" >> 8finalize.ldif
echo "olcMirrorMode: TRUE" >> 8finalize.ldif
 
echo "finalize.ldif generated"
#############


###############finish creating 9finish.ldif

echo "-" >> finish.ldif
echo "add: olcDbIndex" >> finish.ldif
echo "olcDbIndex: entryUUID  eq" >> finish.ldif
echo "-" >> finish.ldif
echo "add: olcDbIndex" >> finish.ldif
echo "olcDbIndex: entryCSN  eq" >> finish.ldif
echo "-" >> finish.ldif
echo "add: olcMirrorMode" >> finish.ldif
echo "olcMirrorMode: TRUE" >> finish.ldif


echo "completed 9finish.ldif generation"
################




for (( j=1; j<=$2; j++))
do


#####preparing vmname variables (current vmname and vmname+1)
vmname=$1LDAP$j
k=$(($j+1))
vmname2=$1LDAP$k


##### make hosts file and send it to the VM
	echo "127.0.1.1       "$vmname > 1hosts
	cat hostsbasic >> 1hosts
	lxc-ls --fancy | grep "LDAP" | grep "RUNNING" | sed 's/RUNNING.../ /g' | sed 's/^\([^ ]*\) \(.*\) \([^ ]*\)$/\3 \2 \1/' | sed -e 's/-//' -e 's/ //g' -e 's/-/\t/' | cat >> 1hosts && echo "hosts sed success"
	cat 1hosts | lxc-attach -n $1LDAP$j -- /bin/sh -c "/bin/cat > /etc/hosts" && echo "placed /etc/hosts file"



#SLAPD_SERVICES
#####isolating the relevant IPs and removing the current VMs IP: print all running VMs, isolate running VMs, isolate LDAP VMs. Remove irrelevant data. echo Data into new line: remove current VMs name and IP from list, (due to bug, second process: if current VM is last in the list, remove it from there). replace VM names with ldap protocol prefix "ldap://". Add port 389 specification (due to similiar issue, repeat this process for last item in the list). Prepare the list for the echo process by nulling all slashes. Lastly, define data in variable from generated file.
slapdIPs1=$(lxc-ls --fancy | grep "RUNNING" | grep LDAP | sed 's/RUNNING 0         -//' | sed 's/ -/\/ /' )
echo $slapdIPs1 | sed "s/$vmname.*$vmname2/$vmname2/" | sed "s/$vmname.*\/$//" | sed 's/[a-zA-Z]*LDAP../ldap:\/\//g' | sed 's/\/ /:389\/ /g' | sed 's/\/$/:389\//g' | sed 's/\//\\\\\\\//g'> slapdIPs
slapdIPs2=$(cat slapdIPs)

#### play variable slapdIPs2 from host into slapdss variable on VM, echo sed process with variable data into new file, and execute.
        lxc-attach -n $1LDAP$j -- /bin/bash -c "slapdss=\$(echo $slapdIPs2) && echo \"sed -i 's/SLAPD_SERVICES=\\\\\\\"/SLAPD_SERVICES=\\\\\\\"\" \$slapdss \"/' /etc/default/slapd \" > slapdedit"
       lxc-attach -n $1LDAP$j -- /bin/bash -c "chmod 700 slapdedit && ./slapdedit"

###debug and check the data by uncommenting following line:
  #      lxc-attach -n $1LDAP$j -- grep /etc/default/slapd -e "SLAPD_SERVICES"


########add ldif files to VM
	cat 4addsyncmod.ldif | lxc-attach -n $1LDAP$j -- /bin/sh -c "/bin/cat > /root/ldapsetup/4addsyncmod.ldif" 
	cat 5changeRootPW.ldif | lxc-attach -n $1LDAP$j -- /bin/sh -c "/bin/cat > /root/ldapsetup/5changeRootPW.ldif"
	cat 6updateIDs.ldif | lxc-attach -n $1LDAP$j -- /bin/sh -c "/bin/cat > /root/ldapsetup/6updateIDs.ldif"
	cat 7ObjectOverlay.ldif | lxc-attach -n $1LDAP$j -- /bin/sh -c "/bin/cat > /root/ldapsetup/7ObjectOverlay.ldif"
	cat 8finalize.ldif | lxc-attach -n $1LDAP$j -- /bin/sh -c "/bin/cat > /root/ldapsetup/8finalize.ldif"
	cat finish.ldif | lxc-attach -n $1LDAP$j -- /bin/sh -c "/bin/cat > /root/ldapsetup/9finish.ldif"


######################################################
########execute ldif configs####

	lxc-attach -n $1LDAP$j -- ldapadd -Y EXTERNAL -H ldapi:/// -f /root/ldapsetup/4addsyncmod.ldif
	lxc-attach -n $1LDAP$j -- ldapadd -Y EXTERNAL -H ldapi:/// -f /root/ldapsetup/5changeRootPW.ldif
	lxc-attach -n $1LDAP$j -- ldapadd -Y EXTERNAL -H ldapi:/// -f /root/ldapsetup/6updateIDs.ldif
	lxc-attach -n $1LDAP$j -- ldapadd -Y EXTERNAL -H ldapi:/// -f /root/ldapsetup/7ObjectOverlay.ldif
	lxc-attach -n $1LDAP$j -- ldapadd -Y EXTERNAL -H ldapi:/// -f /root/ldapsetup/8finalize.ldif
	lxc-attach -n $1LDAP$j -- ldapadd -Y EXTERNAL -H ldapi:/// -f /root/ldapsetup/9finish.ldif

	echo "successfully initialized ldap on" $1"LDAP"$j
done


cat 10start.ldif | lxc-attach -n $1LDAP1 -- /bin/sh -c "/bin/cat > /root/ldapsetup/10start.ldif"
lxc-attach -n $1LDAP1 -- ldapadd -Y EXTERNAL -H ldapi:/// -f /root/ldapsetup/10start.ldif && echo "success!"
